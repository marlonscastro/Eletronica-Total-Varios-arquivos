CCS PCM C Compiler, Version 4.114, 93483988               19-mai-14 21:24

               Filename: D:\SkyDrive\Eletronica\PROJETOS PIC CCS\74HC164 PIC TEST\16F867 74HC164\main.lst

               ROM used: 172 words (2%)
                         Largest free fragment is 2048
               RAM used: 20 (5%) at main() level
                         25 (7%) worst case
               Stack:    2 worst case (1 in main + 1 for interrupts)

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   08B
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.5
0018:  GOTO   01B
0019:  BTFSC  0B.2
001A:  GOTO   02C
001B:  MOVF   22,W
001C:  MOVWF  04
001D:  MOVF   23,W
001E:  MOVWF  77
001F:  MOVF   24,W
0020:  MOVWF  78
0021:  MOVF   25,W
0022:  MOVWF  79
0023:  MOVF   26,W
0024:  MOVWF  7A
0025:  MOVF   20,W
0026:  MOVWF  0A
0027:  SWAPF  21,W
0028:  MOVWF  03
0029:  SWAPF  7F,F
002A:  SWAPF  7F,W
002B:  RETFIE
002C:  BCF    0A.3
002D:  BCF    0A.4
002E:  GOTO   02F
.................... #include <16F876.h> 
.................... //////// Standard Header file for the PIC16F876 device //////////////// 
.................... #device PIC16F876 
.................... #list 
....................  
.................... #device adc=10 
.................... #FUSES NOWDT, HS, NOPUT, NOBROWNOUT, NOLVP, NOCPD, NOWRT, NODEBUG, NOPROTECT 
.................... #use delay(clock=16000000) 
*
0074:  MOVLW  2F
0075:  MOVWF  04
0076:  BCF    03.7
0077:  MOVF   00,W
0078:  BTFSC  03.2
0079:  GOTO   088
007A:  MOVLW  05
007B:  MOVWF  78
007C:  CLRF   77
007D:  DECFSZ 77,F
007E:  GOTO   07D
007F:  DECFSZ 78,F
0080:  GOTO   07C
0081:  MOVLW  2E
0082:  MOVWF  77
0083:  DECFSZ 77,F
0084:  GOTO   083
0085:  GOTO   086
0086:  DECFSZ 00,F
0087:  GOTO   07A
0088:  BCF    0A.3
0089:  BCF    0A.4
008A:  GOTO   0AA (RETURN)
....................  
.................... #define LED_STATUS   pin_a1 
.................... #define DATA         pin_c4    
.................... #define SCK          pin_c3 
....................  
.................... int tempo; 
....................  
.................... #int_TIMER0 
.................... void  TIMER0_isr(void){ 
....................    tempo++; 
*
002F:  INCF   27,F
....................    if(tempo == 45){   //  46 * 21,8ms =~ 1002,8ms ou 1,002 segundos  
0030:  MOVF   27,W
0031:  SUBLW  2D
0032:  BTFSS  03.2
0033:  GOTO   03A
....................       tempo=0; 
0034:  CLRF   27
....................       output_toggle(LED_STATUS); 
0035:  BSF    03.5
0036:  BCF    05.1
0037:  MOVLW  02
0038:  BCF    03.5
0039:  XORWF  05,F
....................    } 
.................... } 
003A:  BCF    0B.2
003B:  BCF    0A.3
003C:  BCF    0A.4
003D:  GOTO   01B
.................... void Write_led_panel(int16 chr){ 
....................    int i; 
....................    for(i=0;i<16;i++){ 
003E:  CLRF   31
003F:  MOVF   31,W
0040:  SUBLW  0F
0041:  BTFSS  03.0
0042:  GOTO   06B
....................       output_low(SCK); 
0043:  BCF    28.3
0044:  MOVF   28,W
0045:  BSF    03.5
0046:  MOVWF  07
0047:  BCF    03.5
0048:  BCF    07.3
....................       if((chr&0x01) == 0) output_low(DATA); 
0049:  MOVF   2F,W
004A:  ANDLW  01
004B:  MOVWF  32
004C:  CLRF   33
004D:  MOVF   32,F
004E:  BTFSS  03.2
004F:  GOTO   05A
0050:  MOVF   33,F
0051:  BTFSS  03.2
0052:  GOTO   05A
0053:  BCF    28.4
0054:  MOVF   28,W
0055:  BSF    03.5
0056:  MOVWF  07
0057:  BCF    03.5
0058:  BCF    07.4
....................       else output_high(DATA); 
0059:  GOTO   060
005A:  BCF    28.4
005B:  MOVF   28,W
005C:  BSF    03.5
005D:  MOVWF  07
005E:  BCF    03.5
005F:  BSF    07.4
....................       output_high(SCK); 
0060:  BCF    28.3
0061:  MOVF   28,W
0062:  BSF    03.5
0063:  MOVWF  07
0064:  BCF    03.5
0065:  BSF    07.3
....................       chr=chr>>1; 
0066:  BCF    03.0
0067:  RRF    30,F
0068:  RRF    2F,F
....................    } 
0069:  INCF   31,F
006A:  GOTO   03F
....................    output_high(DATA); 
006B:  BCF    28.4
006C:  MOVF   28,W
006D:  BSF    03.5
006E:  MOVWF  07
006F:  BCF    03.5
0070:  BSF    07.4
.................... } 
0071:  BCF    0A.3
0072:  BCF    0A.4
0073:  GOTO   0A7 (RETURN)
....................  
.................... void main(){ 
*
008B:  CLRF   04
008C:  BCF    03.7
008D:  MOVLW  1F
008E:  ANDWF  03,F
008F:  MOVLW  FF
0090:  MOVWF  28
0091:  BSF    03.5
0092:  BSF    1F.0
0093:  BSF    1F.1
0094:  BSF    1F.2
0095:  BCF    1F.3
....................    double amp; 
....................    long i;  
....................    setup_timer_0(RTCC_INTERNAL|RTCC_DIV_256|RTCC_8_bit); 
0096:  MOVF   01,W
0097:  ANDLW  C0
0098:  IORLW  07
0099:  MOVWF  01
....................    setup_adc_ports(NO_ANALOGS); 
009A:  BSF    1F.0
009B:  BSF    1F.1
009C:  BSF    1F.2
009D:  BCF    1F.3
....................    setup_adc(ADC_OFF); 
009E:  BCF    03.5
009F:  BCF    1F.0
....................    enable_interrupts(INT_TIMER0); 
00A0:  BSF    0B.5
....................    enable_interrupts(GLOBAL); 
00A1:  MOVLW  C0
00A2:  IORWF  0B,F
....................    while(true){ 
....................       Write_led_panel(0xea);          
00A3:  CLRF   30
00A4:  MOVLW  EA
00A5:  MOVWF  2F
00A6:  GOTO   03E
....................       delay_ms(100); 
00A7:  MOVLW  64
00A8:  MOVWF  2F
00A9:  GOTO   074
....................    } 
00AA:  GOTO   0A3
.................... } 
....................  
00AB:  SLEEP

Configuration Fuses:
   Word  1: 3D3A   HS NOWDT NOPUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
