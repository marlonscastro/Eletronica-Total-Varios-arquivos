D G "__PCH__" 0 10 ""4.114""
D G "__DEVICE__" 0 10 "4550"
D G "__DATE__" 0 10 ""06-mai-13""
D G "__TIME__" 0 10 ""15:58:13"" "Standard Header file for the PIC18F4550 device ////////////////"
d G "PIN_A0" 1 27 "31744"
d G "PIN_A1" 1 28 "31745"
d G "PIN_A2" 1 29 "31746"
d G "PIN_A3" 1 30 "31747"
d G "PIN_A4" 1 31 "31748"
d G "PIN_A5" 1 32 "31749"
d G "PIN_A6" 1 33 "31750"
d G "PIN_B0" 1 35 "31752"
d G "PIN_B1" 1 36 "31753"
d G "PIN_B2" 1 37 "31754"
d G "PIN_B3" 1 38 "31755"
d G "PIN_B4" 1 39 "31756"
d G "PIN_B5" 1 40 "31757"
d G "PIN_B6" 1 41 "31758"
d G "PIN_B7" 1 42 "31759"
d G "PIN_C0" 1 44 "31760"
d G "PIN_C1" 1 45 "31761"
d G "PIN_C2" 1 46 "31762"
d G "PIN_C4" 1 47 "31764"
d G "PIN_C5" 1 48 "31765"
d G "PIN_C6" 1 49 "31766"
d G "PIN_C7" 1 50 "31767"
d G "PIN_D0" 1 52 "31768"
d G "PIN_D1" 1 53 "31769"
d G "PIN_D2" 1 54 "31770"
d G "PIN_D3" 1 55 "31771"
d G "PIN_D4" 1 56 "31772"
d G "PIN_D5" 1 57 "31773"
d G "PIN_D6" 1 58 "31774"
d G "PIN_D7" 1 59 "31775"
d G "PIN_E0" 1 61 "31776"
d G "PIN_E1" 1 62 "31777"
d G "PIN_E2" 1 63 "31778"
d G "PIN_E3" 1 64 "31779"
d G "PIN_E7" 1 65 "31783"
d G "FALSE" 1 68 "0"
d G "TRUE" 1 69 "1"
d G "BYTE" 1 71 "int8"
d G "BOOLEAN" 1 72 "int1"
d G "getc" 1 74 "getch"
d G "fgetc" 1 75 "getch"
d G "getchar" 1 76 "getch"
d G "putc" 1 77 "putchar"
d G "fputc" 1 78 "putchar"
d G "fgets" 1 79 "gets"
d G "fputs" 1 80 "puts"
d G "WDT_TIMEOUT" 1 86 "7"
d G "MCLR_FROM_SLEEP" 1 87 "11"
d G "MCLR_FROM_RUN" 1 88 "15"
d G "NORMAL_POWER_UP" 1 89 "12"
d G "BROWNOUT_RESTART" 1 90 "14"
d G "WDT_FROM_SLEEP" 1 91 "3"
d G "RESET_INSTRUCTION" 1 92 "0"
d G "SLEEP_FULL" 1 96 "0" "Default"
d G "SLEEP_IDLE" 1 97 "1" "Clock and peripherals don't stop"
d G "T0_INTERNAL" 1 105 "0"
d G "T0_EXT_L_TO_H" 1 106 "32"
d G "T0_EXT_H_TO_L" 1 107 "48"
d G "T0_DIV_1" 1 109 "8"
d G "T0_DIV_2" 1 110 "0"
d G "T0_DIV_4" 1 111 "1"
d G "T0_DIV_8" 1 112 "2"
d G "T0_DIV_16" 1 113 "3"
d G "T0_DIV_32" 1 114 "4"
d G "T0_DIV_64" 1 115 "5"
d G "T0_DIV_128" 1 116 "6"
d G "T0_DIV_256" 1 117 "7"
d G "T0_OFF" 1 119 "0x80"
d G "T0_8_BIT" 1 121 "0x40"
d G "RTCC_INTERNAL" 1 123 "0" "The following are provided for compatibility"
d G "RTCC_EXT_L_TO_H" 1 124 "32" "with older compiler versions"
d G "RTCC_EXT_H_TO_L" 1 125 "48"
d G "RTCC_DIV_1" 1 126 "8"
d G "RTCC_DIV_2" 1 127 "0"
d G "RTCC_DIV_4" 1 128 "1"
d G "RTCC_DIV_8" 1 129 "2"
d G "RTCC_DIV_16" 1 130 "3"
d G "RTCC_DIV_32" 1 131 "4"
d G "RTCC_DIV_64" 1 132 "5"
d G "RTCC_DIV_128" 1 133 "6"
d G "RTCC_DIV_256" 1 134 "7"
d G "RTCC_OFF" 1 135 "0x80"
d G "RTCC_8_BIT" 1 136 "0x40"
d G "WDT_ON" 1 147 "0x100"
d G "WDT_OFF" 1 148 "0"
d G "T1_DISABLED" 1 154 "0"
d G "T1_INTERNAL" 1 155 "0x85"
d G "T1_EXTERNAL" 1 156 "0x87"
d G "T1_EXTERNAL_SYNC" 1 157 "0x83"
d G "T1_CLK_OUT" 1 159 "8"
d G "T1_DIV_BY_1" 1 161 "0"
d G "T1_DIV_BY_2" 1 162 "0x10"
d G "T1_DIV_BY_4" 1 163 "0x20"
d G "T1_DIV_BY_8" 1 164 "0x30"
d G "T2_DISABLED" 1 169 "0"
d G "T2_DIV_BY_1" 1 170 "4"
d G "T2_DIV_BY_4" 1 171 "5"
d G "T2_DIV_BY_16" 1 172 "6"
d G "T3_DISABLED" 1 178 "0"
d G "T3_INTERNAL" 1 179 "0x85"
d G "T3_EXTERNAL" 1 180 "0x87"
d G "T3_EXTERNAL_SYNC" 1 181 "0x83"
d G "T3_DIV_BY_1" 1 183 "0"
d G "T3_DIV_BY_2" 1 184 "0x10"
d G "T3_DIV_BY_4" 1 185 "0x20"
d G "T3_DIV_BY_8" 1 186 "0x30"
d G "CCP_OFF" 1 192 "0"
d G "CCP_CAPTURE_FE" 1 193 "4"
d G "CCP_CAPTURE_RE" 1 194 "5"
d G "CCP_CAPTURE_DIV_4" 1 195 "6"
d G "CCP_CAPTURE_DIV_16" 1 196 "7"
d G "CCP_COMPARE_SET_ON_MATCH" 1 197 "8"
d G "CCP_COMPARE_CLR_ON_MATCH" 1 198 "9"
d G "CCP_COMPARE_INT" 1 199 "0xA"
d G "CCP_COMPARE_INT_AND_TOGGLE" 1 200 "0x2"
d G "CCP_COMPARE_RESET_TIMER" 1 201 "0xB"
d G "CCP_PWM" 1 202 "0xC"
d G "CCP_PWM_PLUS_1" 1 203 "0x1c"
d G "CCP_PWM_PLUS_2" 1 204 "0x2c"
d G "CCP_PWM_PLUS_3" 1 205 "0x3c"
d G "T3_CCP1_TO_2" 1 211 "0x48"
d G "T3_CCP2" 1 212 "0x8"
d G "CCP_PWM_H_H" 1 215 "0x0c"
d G "CCP_PWM_H_L" 1 216 "0x0d"
d G "CCP_PWM_L_H" 1 217 "0x0e"
d G "CCP_PWM_L_L" 1 218 "0x0f"
d G "CCP_PWM_FULL_BRIDGE" 1 220 "0x40"
d G "CCP_PWM_FULL_BRIDGE_REV" 1 221 "0xC0"
d G "CCP_PWM_HALF_BRIDGE" 1 222 "0x80"
d G "CCP_SHUTDOWN_ON_COMP1" 1 224 "0x100000"
d G "CCP_SHUTDOWN_ON_COMP2" 1 225 "0x200000"
d G "CCP_SHUTDOWN_ON_COMP" 1 226 "0x300000"
d G "CCP_SHUTDOWN_ON_INT0" 1 227 "0x400000"
d G "CCP_SHUTDOWN_ON_COMP1_INT0" 1 228 "0x500000"
d G "CCP_SHUTDOWN_ON_COMP2_INT0" 1 229 "0x600000"
d G "CCP_SHUTDOWN_ON_COMP_INT0" 1 230 "0x700000"
d G "CCP_SHUTDOWN_AC_L" 1 232 "0x000000"
d G "CCP_SHUTDOWN_AC_H" 1 233 "0x040000"
d G "CCP_SHUTDOWN_AC_F" 1 234 "0x080000"
d G "CCP_SHUTDOWN_BD_L" 1 236 "0x000000"
d G "CCP_SHUTDOWN_BD_H" 1 237 "0x010000"
d G "CCP_SHUTDOWN_BD_F" 1 238 "0x020000"
d G "CCP_SHUTDOWN_RESTART" 1 240 "0x80000000"
d G "PSP_ENABLED" 1 250 "0x10"
d G "PSP_DISABLED" 1 251 "0"
d G "SPI_MASTER" 1 258 "0x20"
d G "SPI_SLAVE" 1 259 "0x24"
d G "SPI_SCK_IDLE_HIGH" 1 260 "0x10"
d G "SPI_SCK_IDLE_LOW" 1 261 "0x00"
d G "SPI_CLK_DIV_4" 1 262 "0x00"
d G "SPI_CLK_DIV_16" 1 263 "0x01"
d G "SPI_CLK_DIV_64" 1 264 "0x02"
d G "SPI_CLK_T2" 1 265 "0x03"
d G "SPI_SS_DISABLED" 1 266 "0x01"
d G "SPI_XMIT_L_TO_H" 1 268 "0x4000"
d G "SPI_XMIT_H_TO_L" 1 269 "0x0000"
d G "SPI_SAMPLE_AT_MIDDLE" 1 271 "0x0000"
d G "SPI_SAMPLE_AT_END" 1 272 "0x8000"
d G "SPI_L_TO_H" 1 275 "SPI_SCK_IDLE_LOW"
d G "SPI_H_TO_L" 1 276 "SPI_SCK_IDLE_HIGH"
d G "UART_ADDRESS" 1 282 "2"
d G "UART_DATA" 1 283 "4"
d G "UART_AUTODETECT" 1 284 "8"
d G "UART_AUTODETECT_NOWAIT" 1 285 "9"
d G "UART_WAKEUP_ON_RDA" 1 286 "10"
d G "UART_SEND_BREAK" 1 287 "13"
d G "A0_A3_A1_A3" 1 291 "0xfff04"
d G "A0_A3_A1_A2_OUT_ON_A4_A5" 1 292 "0xfcf03"
d G "A0_A3_A1_A3_OUT_ON_A4_A5" 1 293 "0xbcf05"
d G "NC_NC_NC_NC" 1 294 "0x0ff07"
d G "A0_A3_A1_A2" 1 295 "0xfff02"
d G "A0_A3_NC_NC_OUT_ON_A4" 1 296 "0x9ef01"
d G "A0_VR_A1_VR" 1 297 "0x3ff06"
d G "A3_VR_A2_VR" 1 298 "0xcff0e"
d G "CP1_INVERT" 1 299 "0x0000010"
d G "CP2_INVERT" 1 300 "0x0000020"
d G "VREF_LOW" 1 308 "0xa0"
d G "VREF_HIGH" 1 309 "0x80"
d G "VREF_F5" 1 311 "0x40"
d G "VREF_COMP" 1 312 "0x10"
d G "LVD_LVDIN" 1 317 "0x1F"
d G "LVD_45" 1 318 "0x1E"
d G "LVD_42" 1 319 "0x1D"
d G "LVD_40" 1 320 "0x1C"
d G "LVD_38" 1 321 "0x1B"
d G "LVD_36" 1 322 "0x1A"
d G "LVD_35" 1 323 "0x19"
d G "LVD_33" 1 324 "0x18"
d G "LVD_30" 1 325 "0x17"
d G "LVD_28" 1 326 "0x16"
d G "LVD_27" 1 327 "0x15"
d G "LVD_25" 1 328 "0x14"
d G "LVD_24" 1 329 "0x13"
d G "LVD_23" 1 330 "0x12"
d G "LVD_22" 1 331 "0x11"
d G "LVD_21" 1 332 "0x10"
d G "LVD_TRIGGER_BELOW" 1 334 "0"
d G "LVD_TRIGGER_ABOVE" 1 335 "0x80"
d G "OSC_31KHZ" 1 341 "0"
d G "OSC_125KHZ" 1 342 "0x10"
d G "OSC_250KHZ" 1 343 "0x20"
d G "OSC_500KHZ" 1 344 "0x30"
d G "OSC_1MHZ" 1 345 "0x40"
d G "OSC_2MHZ" 1 346 "0x50"
d G "OSC_4MHZ" 1 347 "0x60"
d G "OSC_8MHZ" 1 348 "0x70"
d G "OSC_16MHZ" 1 349 "0x4060"
d G "OSC_32MHZ" 1 350 "0x4070"
d G "OSC_TIMER1" 1 352 "1"
d G "OSC_INTRC" 1 353 "2"
d G "OSC_NORMAL" 1 354 "0"
d G "OSC_IDLE_MODE" 1 356 "0x80"
d G "OSC_31250" 1 357 "0x8000"
d G "OSC_PLL_ON" 1 358 "0x4000"
d G "OSC_PLL_OFF" 1 359 "0"
d G "OSC_STATE_STABLE" 1 363 "4"
d G "OSC_STATE_EXT_RUNNING" 1 364 "8"
d G "ADC_OFF" 1 371 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 1 372 "0x100"
d G "ADC_CLOCK_DIV_4" 1 373 "0x04"
d G "ADC_CLOCK_DIV_8" 1 374 "0x01"
d G "ADC_CLOCK_DIV_16" 1 375 "0x05"
d G "ADC_CLOCK_DIV_32" 1 376 "0x02"
d G "ADC_CLOCK_DIV_64" 1 377 "0x06"
d G "ADC_CLOCK_INTERNAL" 1 378 "0x07" "Internal 2-6us"
d G "NO_ANALOGS" 1 382 "0x0F" "None"
d G "ALL_ANALOG" 1 383 "0x00" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3 B1 B4 B0"
d G "AN0_TO_AN11" 1 384 "0x03" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3 B1 B4"
d G "AN0_TO_AN10" 1 385 "0x04" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3 B1"
d G "AN0_TO_AN9" 1 386 "0x05" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3"
d G "AN0_TO_AN8" 1 387 "0x06" "A0 A1 A2 A3 A5 E0 E1 E2 B2"
d G "AN0_TO_AN7" 1 388 "0x07" "A0 A1 A2 A3 A5 E0 E1 E2"
d G "AN0_TO_AN6" 1 389 "0x08" "A0 A1 A2 A3 A5 E0 E1"
d G "AN0_TO_AN5" 1 390 "0x09" "A0 A1 A2 A3 A5 E0"
d G "AN0_TO_AN4" 1 391 "0x0A" "A0 A1 A2 A3 A5"
d G "AN0_TO_AN3" 1 392 "0x0B" "A0 A1 A2 A3"
d G "AN0_TO_AN2" 1 393 "0x0C" "A0 A1 A2"
d G "AN0_TO_AN1" 1 394 "0x0D" "A0 A1"
d G "AN0" 1 395 "0x0E" "A0"
d G "AN0_TO_AN11_ANALOG" 1 396 "0x03" "!old only provided for compatibility"
d G "AN0_TO_AN10_ANALOG" 1 397 "0x04" "!old only provided for compatibility"
d G "AN0_TO_AN9_ANALOG" 1 398 "0x05" "!old only provided for compatibility"
d G "AN0_TO_AN8_ANALOG" 1 399 "0x06" "!old only provided for compatibility"
d G "AN0_TO_AN7_ANALOG" 1 400 "0x07" "!old only provided for compatibility"
d G "AN0_TO_AN6_ANALOG" 1 401 "0x08" "!old only provided for compatibility"
d G "AN0_TO_AN5_ANALOG" 1 402 "0x09" "!old only provided for compatibility"
d G "AN0_TO_AN4_ANALOG" 1 403 "0x0A" "!old only provided for compatibility"
d G "AN0_TO_AN3_ANALOG" 1 404 "0x0B" "!old only provided for compatibility"
d G "AN0_TO_AN2_ANALOG" 1 405 "0x0C" "!old only provided for compatibility"
d G "AN0_TO_AN1_ANALOG" 1 406 "0x0D" "!old only provided for compatibility"
d G "AN0_ANALOG" 1 407 "0x0E" "!old only provided for compatibility"
d G "VSS_VDD" 1 410 "0x00" "Range 0-Vdd"
d G "VREF_VREF" 1 411 "0x30" "Range VrefL-VrefH"
d G "VREF_VDD" 1 412 "0x20" "Range VrefL-Vdd"
d G "VSS_VREF" 1 413 "0x10" "Range 0-VrefH"
d G "ADC_START_AND_READ" 1 416 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 1 417 "1"
d G "ADC_READ_ONLY" 1 418 "6"
d G "L_TO_H" 1 426 "0x40"
d G "H_TO_L" 1 427 "0"
d G "GLOBAL" 1 429 "0xF2C0"
d G "PERIPH" 1 430 "0xF240"
d G "INT_RTCC" 1 431 "0x00F220"
d G "INT_TIMER0" 1 432 "0x00F220"
d G "INT_TIMER1" 1 433 "0x009D01"
d G "INT_TIMER2" 1 434 "0x009D02"
d G "INT_TIMER3" 1 435 "0x00A002"
d G "INT_EXT_L2H" 1 436 "0x5000F210"
d G "INT_EXT_H2L" 1 437 "0x6000F210"
d G "INT_EXT" 1 438 "0x00F210"
d G "INT_EXT1_L2H" 1 439 "0x5001F008"
d G "INT_EXT1_H2L" 1 440 "0x6001F008"
d G "INT_EXT1" 1 441 "0x00F008"
d G "INT_EXT2_L2H" 1 442 "0x5002F010"
d G "INT_EXT2_H2L" 1 443 "0x6002F010"
d G "INT_EXT2" 1 444 "0x00F010"
d G "INT_RB" 1 445 "0x00FFF208"
d G "INT_AD" 1 446 "0x009D40"
d G "INT_RDA" 1 447 "0x009D20"
d G "INT_TBE" 1 448 "0x009D10"
d G "INT_SSP" 1 449 "0x009D08"
d G "INT_CCP1" 1 450 "0x009D04"
d G "INT_CCP2" 1 451 "0x00A001"
d G "INT_BUSCOL" 1 452 "0x00A008"
d G "INT_LOWVOLT" 1 453 "0x00A004"
d G "INT_COMP" 1 454 "0x00A040"
d G "INT_EEPROM" 1 455 "0x00A010"
d G "INT_OSCF" 1 456 "0x00A080"
d G "INT_SPP" 1 457 "0x009D80"
d G "INT_USB" 1 458 "0x00A020"
D G "NOK6100_H" 2 2 ""
D G "PHILIPS_DRV" 2 6 ""
V G "FONT6x8" 2 13 "int8[97][8]"
C L "PORTD" 2 4 1 "FUNCTION"
C L "PORTD" 2 4 1 "FUNCTION"
C L "PORTD" 2 4 1 "FUNCTION"
C L "PORTD" 2 4 1 "FUNCTION"
C L "PORTD" 2 4 1 "FUNCTION"
C L "PORTD" 2 4 1 "FUNCTION"
C L "PORTD" 2 4 1 "FUNCTION"
C L "PORTD" 2 4 1 "FUNCTION"
C L "PORTD" 2 4 1 "FUNCTION"
C L "PORTD" 2 4 1 "FUNCTION"
V G "FONT8x8" 2 111 "int8[97][8]"
C L "PORTD" 2 4 1 "FUNCTION"
C L "PORTD" 2 4 1 "FUNCTION"
C L "PORTD" 2 4 1 "FUNCTION"
C L "PORTD" 2 4 1 "FUNCTION"
C L "PORTD" 2 4 1 "FUNCTION"
C L "PORTD" 2 4 1 "FUNCTION"
C L "PORTD" 2 4 1 "FUNCTION"
C L "PORTD" 2 4 1 "FUNCTION"
C L "PORTD" 2 4 1 "FUNCTION"
C L "PORTD" 2 4 1 "FUNCTION"
V G "FONT8x16" 2 209 "int8[97][16]"
C L "PORTD" 2 4 1 "FUNCTION"
C L "PORTD" 2 4 1 "FUNCTION"
C L "PORTD" 2 4 1 "FUNCTION"
C L "PORTD" 2 4 1 "FUNCTION"
C L "PORTD" 2 4 1 "FUNCTION"
C L "PORTD" 2 4 1 "FUNCTION"
C L "PORTD" 2 4 1 "FUNCTION"
C L "PORTD" 2 4 1 "FUNCTION"
C L "PORTD" 2 4 1 "FUNCTION"
D G "WHITE" 2 309 "0xFFF"
D G "BLACK" 2 310 "0x000"
D G "RED" 2 311 "0xF00"
D G "GREEN" 2 312 "0x0F0"
D G "BLUE" 2 313 "0x00F"
D G "CYAN" 2 314 "0x0FF"
D G "MAGENTA" 2 315 "0xF0F"
D G "YELLOW" 2 316 "0xFF0"
D G "BROWN" 2 317 "0xB22"
D G "ORANGE" 2 318 "0xFA0"
D G "PINK" 2 319 "0xF6A"
D G "SMALL" 2 321 "0"
D G "MEDIUM" 2 322 "1"
D G "LARGE" 2 323 "2"
D G "GLCD_WIDTH" 2 328 "132"
V G "GreyColors" 2 330 "int16[32]"
D G "PCF8833_H" 3 2 ""
D G "_STRING" 4 12 ""
D G "_STDDEF" 5 13 ""
D G "ptrdiff_t" 5 18 "unsigned int16"
D G "size_t" 5 24 "unsigned int16"
D G "wchar_t" 5 26 "char"
D G "NULL" 5 27 "0"
D G "offsetof" 5 29 "(s,f) (offsetofbit(s,f)/8)"
D G "_CTYPE" 6 12 ""
D G "islower" 6 14 "(x)  isamong(x,"abcdefghijklmnopqrstuvwxyz")"
D G "isupper" 6 15 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZ")"
D G "isalnum" 6 16 "(x)  isamong(x,"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isalpha" 6 17 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isdigit" 6 18 "(x)  isamong(x,"0123456789")"
D G "isspace" 6 19 "(x)  ((x)==' ')"
D G "isxdigit" 6 20 "(x) isamong(x,"0123456789ABCDEFabcdef")"
D G "iscntrl" 6 21 "(x)  ((x)<' ')"
D G "isprint" 6 22 "(x)  ((x)>=' ')"
D G "isgraph" 6 23 "(x)  ((x)>' ')"
D G "ispunct" 6 24 "(x)  (((x)>' ')&&!isalnum(x))"
C L "PORTD" 4 19 10 "FUNCTION"
V L "s1" 4 34 "*int8"
V L "s2" 4 34 "*int8"
V L "n" 4 34 "int16"
F G "memmove" 4 34 "*int8(*int8 s1,*int8 s2,int16 n)"
V L "sc1" 4 36 "*int8"
V L "sc2" 4 37 "*int8"
D G "strcopy" 4 54 "strcpy"
C L "strncpy" 4 19 4 "FUNCTION"
V L "s1" 4 61 "*int8"
V L "s2" 4 61 "*int8"
V L "n" 4 61 "int16"
F G "strncpy" 4 61 "*int8(*int8 s1,*int8 s2,int16 n)"
V L "s" 4 63 "*int8"
C L "strcat" 4 19 3 "FUNCTION"
V L "s1" 4 78 "*int8"
V L "s2" 4 78 "*int8"
F G "strcat" 4 78 "*int8(*int8 s1,*int8 s2)"
V L "s" 4 80 "*int8"
C L "strncat" 4 19 2 "FUNCTION"
V L "s1" 4 96 "*int8"
V L "s2" 4 96 "*int8"
V L "n" 4 96 "int16"
F G "strncat" 4 96 "*int8(*int8 s1,*int8 s2,int16 n)"
V L "s" 4 98 "*int8"
C L "memcmp" 4 19 3 "FUNCTION"
V L "s1" 4 120 "*int8"
V L "s2" 4 120 "*int8"
V L "n" 4 120 "int16"
F G "memcmp" 4 120 "sint8(*int8 s1,*int8 s2,int16 n)"
V L "su1" 4 122 "*int8"
V L "su2" 4 122 "*int8"
C L "strcmp" 4 19 2 "FUNCTION"
V L "s1" 4 134 "*int8"
V L "s2" 4 134 "*int8"
F G "strcmp" 4 134 "sint8(*int8 s1,*int8 s2)"
C L "strcoll" 4 19 2 "FUNCTION"
V L "s1" 4 144 "*int8"
V L "s2" 4 144 "*int8"
F G "strcoll" 4 144 "sint8(*int8 s1,*int8 s2)"
C L "strncmp" 4 19 4 "FUNCTION"
V L "s1" 4 157 "*int8"
V L "s2" 4 157 "*int8"
V L "n" 4 157 "int16"
F G "strncmp" 4 157 "sint8(*int8 s1,*int8 s2,int16 n)"
C L "strxfrm" 4 19 3 "FUNCTION"
V L "s1" 4 169 "*int8"
V L "s2" 4 169 "*int8"
V L "n" 4 169 "int16"
F G "strxfrm" 4 169 "int16(*int8 s1,*int8 s2,int16 n)"
V L "s" 4 171 "*int8"
V L "n1" 4 172 "int8"
C L "memchr" 4 19 3 "FUNCTION"
V L "s" 4 191 "*int8"
V L "c" 4 191 "int8"
V L "n" 4 191 "int16"
F G "memchr" 4 191 "*int8(*int8 s,int8 c,int16 n)"
V L "uc" 4 193 "int8"
V L "su" 4 194 "*int8"
C L "strchr" 4 19 2 "FUNCTION"
V L "s" 4 205 "*int8"
V L "c" 4 205 "int8"
F G "strchr" 4 205 "*int8(*int8 s,int8 c)"
C L "strcspn" 4 19 4 "FUNCTION"
V L "s1" 4 217 "*int8"
V L "s2" 4 217 "*int8"
F G "strcspn" 4 217 "int8(*int8 s1,*int8 s2)"
V L "sc1" 4 219 "*int8"
V L "sc2" 4 219 "*int8"
C L "strpbrk" 4 19 4 "FUNCTION"
V L "s1" 4 232 "*int8"
V L "s2" 4 232 "*int8"
F G "strpbrk" 4 232 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 4 234 "*int8"
V L "sc2" 4 234 "*int8"
C L "strrchr" 4 19 2 "FUNCTION"
V L "s" 4 247 "*int8"
V L "c" 4 247 "int8"
F G "strrchr" 4 247 "*int8(*int8 s,int8 c)"
V L "p" 4 249 "*int8"
C L "strspn" 4 19 2 "FUNCTION"
V L "s1" 4 262 "*int8"
V L "s2" 4 262 "*int8"
F G "strspn" 4 262 "int8(*int8 s1,*int8 s2)"
V L "sc1" 4 264 "*int8"
V L "sc2" 4 264 "*int8"
C L "strstr" 4 19 6 "FUNCTION"
V L "s1" 4 281 "*int8"
V L "s2" 4 281 "*int8"
F G "strstr" 4 281 "*int8(*int8 s1,*int8 s2)"
V L "s" 4 283 "*int8"
V L "t" 4 283 "*int8"
C L "strtok" 4 19 13 "FUNCTION"
V L "s1" 4 320 "*int8"
V L "s2" 4 320 "*int8"
F G "strtok" 4 320 "*int8(*int8 s1,*int8 s2)"
V L "beg" 4 322 "*int8"
V L "end" 4 322 "*int8"
V L "save" 4 323 "*int8"
C L "strlen" 4 19 6 "FUNCTION"
V L "s" 4 369 "*int8"
F G "strlen" 4 369 "int8(*int8 s)"
V L "sc" 4 371 "*int8"
C L "stricmp" 4 19 2 "FUNCTION"
V L "s1" 4 380 "*int8"
V L "s2" 4 380 "*int8"
F G "stricmp" 4 380 "sint8(*int8 s1,*int8 s2)"
C L "strlwr" 4 19 3 "FUNCTION"
V L "s" 4 394 "*int8"
F G "strlwr" 4 394 "*int8(*int8 s)"
V L "p" 4 396 "*int8"
D G "P_NOP" 3 7 "0x00" "nop"
D G "P_SWRESET" 3 8 "0x01" "software reset"
D G "P_BSTROFF" 3 9 "0x02" "booster voltage OFF"
D G "P_BSTRON" 3 10 "0x03" "booster voltage ON"
D G "P_RDDIDIF" 3 11 "0x04" "read display identification"
D G "P_RDDST" 3 12 "0x09" "read display status"
D G "P_SLEEPIN" 3 13 "0x10" "sleep in"
D G "P_SLEEPOUT" 3 14 "0x11" "sleep out"
D G "P_PTLON" 3 15 "0x12" "partial display mode"
D G "P_NORON" 3 16 "0x13" "display normal mode"
D G "P_INVOFF" 3 17 "0x20" "inversion OFF"
D G "P_INVON" 3 18 "0x21" "inversion ON"
D G "P_DALO" 3 19 "0x22" "all pixel OFF"
D G "P_DAL" 3 20 "0x23" "all pixel ON"
D G "P_SETCON" 3 21 "0x25" "write contrast"
D G "P_DISPOFF" 3 22 "0x28" "display OFF"
D G "P_DISPON" 3 23 "0x29" "display ON"
D G "P_CASET" 3 24 "0x2A" "column address set"
D G "P_PASET" 3 25 "0x2B" "page address set"
D G "P_RAMWR" 3 26 "0x2C" "memory write"
D G "P_RGBSET" 3 27 "0x2D" "colour set"
D G "P_PTLAR" 3 28 "0x30" "partial area"
D G "P_VSCRDEF" 3 29 "0x33" "vertical scrolling definition"
D G "P_TEOFF" 3 30 "0x34" "test mode"
D G "P_TEON" 3 31 "0x35" "test mode"
D G "P_MADCTL" 3 32 "0x36" "memory access control"
D G "P_SEP" 3 33 "0x37" "vertical scrolling start address"
D G "P_IDMOFF" 3 34 "0x38" "idle mode OFF"
D G "P_IDMON" 3 35 "0x39" "idle mode ON"
D G "P_COLMOD" 3 36 "0x3A" "interface pixel format"
D G "P_SETVOP" 3 37 "0xB0" "set Vop"
D G "P_BRS" 3 38 "0xB4" "bottom row swap"
D G "P_TRS" 3 39 "0xB6" "top row swap"
D G "P_DISCTR" 3 40 "0xB9" "display control"
D G "P_DOR" 3 41 "0xBA" "data order"
D G "P_TCDFE" 3 42 "0xBD" "enable/disable DF temperature compensation"
D G "P_TCVOPE" 3 43 "0xBF" "enable/disable Vop temp comp"
D G "P_EC" 3 44 "0xC0" "internal or external oscillator"
D G "P_SETMUL" 3 45 "0xC2" "set multiplication factor"
D G "P_TCVOPAB" 3 46 "0xC3" "set TCVOP slopes A and B"
D G "P_TCVOPCD" 3 47 "0xC4" "set TCVOP slopes c and d"
D G "P_TCDF" 3 48 "0xC5" "set divider frequency"
D G "P_DF8COLOR" 3 49 "0xC6" "set divider frequency 8-color mode"
D G "P_SETBS" 3 50 "0xC7" "set bias system"
D G "P_RDTEMP" 3 51 "0xC8" "temperature read back"
D G "P_NLI" 3 52 "0xC9" "n-line inversion"
D G "P_RDID1" 3 53 "0xDA" "read ID1"
D G "P_RDID2" 3 54 "0xDB" "read ID2"
D G "P_RDID3" 3 55 "0xDC" "read ID3"
V L "data" 3 57 "int8"
F G "PCF8833_write_data" 3 57 "void(int8 data)"
C L "PCF8833_write_data" 3 6 1 "FUNCTION"
C L "PCF8833_write_data" 3 6 1 "FUNCTION"
C L "PCF8833_write_data" 3 6 1 "FUNCTION"
C L "PCF8833_write_data" 3 6 1 "FUNCTION"
C L "PCF8833_write_data" 3 6 1 "FUNCTION"
C L "PCF8833_write_data" 3 6 2 "FUNCTION"
V L "command" 3 80 "int8"
F G "PCF8833_write_command" 3 80 "void(int8 command)"
C L "PCF8833_write_command" 3 6 1 "FUNCTION"
C L "PCF8833_write_command" 3 6 1 "FUNCTION"
C L "PCF8833_write_command" 3 6 1 "FUNCTION"
C L "PCF8833_write_command" 3 6 1 "FUNCTION"
C L "PCF8833_write_command" 3 6 1 "FUNCTION"
C L "PCF8833_write_command" 3 6 2 "FUNCTION"
F G "PCF8833_init" 3 103 "void()"
C L "PCF8833_init" 3 6 1 "FUNCTION"
C L "PCF8833_init" 3 6 1 "FUNCTION"
C L "PCF8833_init" 3 6 1 "FUNCTION"
C L "PCF8833_init" 3 6 2 "FUNCTION"
C L "PCF8833_init" 3 6 2 "FUNCTION"
C L "PCF8833_init" 3 6 2 "FUNCTION"
C L "PCF8833_init" 3 6 1 "FUNCTION"
C L "PCF8833_init" 3 6 1 "FUNCTION"
F G "PCF8833_LCDClearScreen" 3 131 "void()"
V L "i" 3 132 "int16" "loop counter"
C L "PCF8833_LCDClearScreen" 3 6 1 "FUNCTION"
C L "PCF8833_LCDClearScreen" 3 6 1 "FUNCTION"
C L "PCF8833_LCDClearScreen" 3 6 1 "FUNCTION"
V L "x" 3 151 "int8"
V L "y" 3 151 "int8"
V L "color" 3 151 "int16"
F G "PCF8833_LCDSetPixel" 3 151 "void(int8 x,int8 y,int16 color)" "Row address set (command 0x2B)"
C L "PCF8833_LCDSetPixel" 3 6 1 "FUNCTION"
V L "c" 3 168 "int8"
V L "x" 3 168 "int8"
V L "y" 3 168 "int8"
V L "size" 3 168 "int8"
V L "fColor" 3 168 "int16"
V L "bColor" 3 168 "int16"
F G "PCF8833_LCDPutChar" 3 168 "void(int8 c,int8 x,int8 y,int8 size,int16 fColor,int16 bColor)"
V L "i" 3 170 "int8"
V L "j" 3 170 "int8"
V L "nCols" 3 171 "int8"
V L "nRows" 3 172 "int8"
V L "nBytes" 3 173 "int8"
V L "PixelRow" 3 174 "int8"
V L "Mask" 3 175 "int8"
V L "Word0" 3 176 "int16"
V L "Word1" 3 177 "int16"
V L "pChar" 3 178 "int8[16]" "get pointer to the beginning of the selected font table"
C L "PCF8833_LCDPutChar" 3 6 1 "FUNCTION"
C L "PCF8833_LCDPutChar" 3 6 1 "FUNCTION"
C L "PCF8833_LCDPutChar" 3 6 1 "FUNCTION"
C L "PCF8833_LCDPutChar" 3 6 1 "FUNCTION"
C L "PCF8833_LCDPutChar" 3 6 1 "FUNCTION"
C L "PCF8833_LCDPutChar" 3 6 1 "FUNCTION"
C L "PCF8833_LCDPutChar" 3 6 1 "FUNCTION"
C L "PCF8833_LCDPutChar" 3 6 3 "FUNCTION"
C L "PCF8833_LCDPutChar" 3 6 2 "FUNCTION"
C L "PCF8833_LCDPutChar" 3 6 1 "FUNCTION"
C L "PCF8833_LCDPutChar" 3 6 1 "FUNCTION"
V L "pString" 3 247 "*int8"
V L "x" 3 247 "int8"
V L "y" 3 247 "int8"
V L "size" 3 247 "int8"
V L "fColor" 3 247 "int16"
V L "bColor" 3 247 "int16"
F G "PCF8833_LCDPutStr" 3 247 "void(*int8 pString,int8 x,int8 y,int8 size,int16 fColor,int16 bColor)" "loop until null-terminator is seen"
C L "PCF8833_LCDPutStr" 3 6 1 "FUNCTION"
C L "PCF8833_LCDPutStr" 3 6 1 "FUNCTION"
C L "PCF8833_LCDPutStr" 3 6 1 "FUNCTION"
V L "bmp" 3 264 "int8"
F G "PCF8833_LCDWrite132x132bmp" 3 264 "void(int8 bmp)"
V L "j" 3 266 "int16" "loop counter"
C L "PCF8833_LCDWrite132x132bmp" 3 6 4 "FUNCTION"
C L "PCF8833_LCDWrite132x132bmp" 3 6 1 "FUNCTION"
C L "PCF8833_LCDWrite132x132bmp" 3 6 1 "FUNCTION"
C L "PCF8833_LCDWrite132x132bmp" 3 6 1 "FUNCTION"
C L "PCF8833_LCDWrite132x132bmp" 3 6 1 "FUNCTION"
C L "PCF8833_LCDWrite132x132bmp" 3 6 4 "FUNCTION"
V L "icon" 3 312 "int8"
V L "color" 3 312 "int16"
F G "PCF8833_LCDWriteIcon" 3 312 "void(int8 icon,int16 color)"
V L "i" 3 314 "int16"
D G "Nokia6100Init" 2 348 "()   PCF8833_init()"
D G "Nokia6100DisplayOn" 2 349 "() PCF8833_write_command(P_DISPON)"
D G "Nokia6100DisplayOff" 2 350 "()   PCF8833_write_command(P_DISPOFF)"
D G "glcd_pixel" 2 351 "(x, y, color)  PCF8833_LCDSetPixel(x, y, color)"
D G "Nokia6100ClearScreen" 2 352 "()   PCF8833_LCDClearScreen()"
D G "Nokia6100PutChar" 2 353 "(c, x, y, size, fColor, bColor)   PCF8833_LCDPutChar(c, x, y, size, fColor, bColor)"
D G "Nokia6100PutStr" 2 354 "(pString, x, y, Size, fColor, bColor)   PCF8833_LCDPutStr(pString, x, y, Size, fColor, bColor)"
D G "Nokia6100Write132x132bmp" 2 355 "(bmp) PCF8833_LCDWrite132x132bmp(bmp)"
D G "Nokia6100WriteIcon" 2 356 "(icon, color)  PCF8833_LCDWriteIcon(icon, color)"
F G "MAIN" 0 7 "void()"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 1
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "memset" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 3 0
F B "read_program_memory" 3 0
F B "erase_program_eeprom" 1 0
F B "read_external_memory" 3 0
F B "write_external_memory" 3 0
F B "setup_external_memory" 1 0
F B "write_configuration_memory" 2 3
F B "read_configuration_memory" 2 3
F B "strcpy" 2 0
F B "memcpy" 3 0
F B "strstr100" 2 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_d" 1 0
F B "output_e" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_d" 0 0
F B "input_e" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_d" 1 0
F B "set_tris_e" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_d" 0 0
F B "get_tris_e" 0 0
F B "input_change_a" 0 0
F B "input_change_b" 0 0
F B "input_change_c" 0 0
F B "input_change_d" 0 0
F B "input_change_e" 0 0
F B "port_b_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_comparator" 1 0
F B "setup_port_a" 1 2
F B "setup_adc_ports" 1 2
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "setup_timer_0" 1 0
F B "setup_vref" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_timer_3" 1 0
F B "set_timer3" 1 0
F B "get_timer3" 0 0
F B "setup_ccp1" 1 2
F B "set_pwm1_duty" 1 0
F B "setup_ccp2" 1 0
F B "set_pwm2_duty" 1 0
F B "setup_low_volt_detect" 1 0
F B "setup_oscillator" 1 2
F B "setup_psp" 1 0
F B "psp_output_full" 0 0
F B "psp_input_full" 0 0
F B "psp_overflow" 0 0
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 0
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 0
F B "spi_data_is_in2" 0 0
F B "brownout_enable" 1 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
