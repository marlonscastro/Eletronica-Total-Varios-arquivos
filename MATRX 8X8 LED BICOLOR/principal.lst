CCS PCM C Compiler, Version 4.114, 93460303               04-mai-13 15:35

               Filename: D:\SkyDrive\Eletronica\PROJETOS PIC CCS\MATRX 8X8 LED BICOLOR\principal.lst

               ROM used: 422 words (10%)
                         Largest free fragment is 2048
               RAM used: 42 (22%) at main() level
                         46 (24%) worst case
               Stack:    2 worst case (1 in main + 1 for interrupts)

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   0B5
0003:  NOP
0004:  BTFSS  0A.3
0005:  BCF    0A.4
0006:  BTFSC  0A.3
0007:  BSF    0A.4
0008:  BCF    0A.3
0009:  BTFSC  03.5
000A:  GOTO   00F
000B:  MOVWF  24
000C:  SWAPF  03,W
000D:  MOVWF  25
000E:  GOTO   014
000F:  BCF    03.5
0010:  MOVWF  24
0011:  SWAPF  03,W
0012:  MOVWF  25
0013:  BSF    25.1
0014:  BTFSS  0A.4
0015:  BCF    0A.3
0016:  BTFSC  0A.4
0017:  BSF    0A.3
0018:  BCF    0A.4
0019:  MOVF   0A,W
001A:  MOVWF  2B
001B:  CLRF   0A
001C:  BCF    03.7
001D:  SWAPF  24,F
001E:  MOVF   04,W
001F:  MOVWF  26
0020:  MOVF   20,W
0021:  MOVWF  27
0022:  MOVF   21,W
0023:  MOVWF  28
0024:  MOVF   22,W
0025:  MOVWF  29
0026:  MOVF   23,W
0027:  MOVWF  2A
0028:  BCF    03.5
0029:  BTFSS  0B.5
002A:  GOTO   02D
002B:  BTFSC  0B.2
002C:  GOTO   040
002D:  MOVF   26,W
002E:  MOVWF  04
002F:  MOVF   27,W
0030:  MOVWF  20
0031:  MOVF   28,W
0032:  MOVWF  21
0033:  MOVF   29,W
0034:  MOVWF  22
0035:  MOVF   2A,W
0036:  MOVWF  23
0037:  MOVF   2B,W
0038:  MOVWF  0A
0039:  SWAPF  25,W
003A:  MOVWF  03
003B:  BCF    03.5
003C:  SWAPF  24,W
003D:  BTFSC  25.1
003E:  BSF    03.5
003F:  RETFIE
0040:  BCF    0A.3
0041:  GOTO   042
.................... #include <16F73.h> 
.................... //////// Standard Header file for the PIC16F73 device //////////////// 
.................... #device PIC16F73 
.................... #list 
....................  
.................... #use delay(clock=16000000) 
*
00A0:  MOVLW  48
00A1:  MOVWF  04
00A2:  MOVF   00,W
00A3:  BTFSC  03.2
00A4:  GOTO   0B3
00A5:  MOVLW  05
00A6:  MOVWF  21
00A7:  CLRF   20
00A8:  DECFSZ 20,F
00A9:  GOTO   0A8
00AA:  DECFSZ 21,F
00AB:  GOTO   0A7
00AC:  MOVLW  2E
00AD:  MOVWF  20
00AE:  DECFSZ 20,F
00AF:  GOTO   0AE
00B0:  GOTO   0B1
00B1:  DECFSZ 00,F
00B2:  GOTO   0A5
00B3:  BCF    0A.3
00B4:  GOTO   128 (RETURN)
.................... #FUSES NOWDT, HS, NOPUT, NOPROTECT, NOBROWNOUT  
....................  
.................... int contaTempo = 0, i=0, AltOBJ=2; 
.................... int contaBotoes = 0, desloc = 3, flag = 0, largOBJ = 2; 
.................... int1 bit1, bit2; 
....................  
.................... byte OBJ[2] = {0b00011000, 
....................                0b00011000}; 
*
00C6:  MOVLW  18
00C7:  BCF    03.5
00C8:  MOVWF  34
00C9:  MOVWF  35
.................... byte vm[] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}; 
00CA:  CLRF   36
00CB:  CLRF   37
00CC:  CLRF   38
00CD:  CLRF   39
00CE:  CLRF   3A
00CF:  CLRF   3B
00D0:  CLRF   3C
00D1:  CLRF   3D
.................... byte vd[] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}; 
00D2:  CLRF   3E
00D3:  CLRF   3F
00D4:  CLRF   40
00D5:  CLRF   41
00D6:  CLRF   42
00D7:  CLRF   43
00D8:  CLRF   44
00D9:  CLRF   45
....................    
.................... #INT_TIMER0 
.................... void RTTC_isr(void){ 
....................    int y, t; 
....................    contaTempo++; 
*
0042:  INCF   2C,F
....................    if (contaTempo==60){ // ~1seg 
0043:  MOVF   2C,W
0044:  SUBLW  3C
0045:  BTFSS  03.2
0046:  GOTO   09D
....................       if((i == 8-AltOBJ) || (((vm[i+AltOBJ])&(OBJ[AltOBJ-1])) != 0)){ 
0047:  MOVF   2E,W
0048:  SUBLW  08
0049:  SUBWF  2D,W
004A:  BTFSC  03.2
004B:  GOTO   05A
004C:  MOVF   2E,W
004D:  ADDWF  2D,W
004E:  ADDLW  36
004F:  MOVWF  04
0050:  MOVF   00,W
0051:  MOVWF  4C
0052:  MOVLW  01
0053:  SUBWF  2E,W
0054:  ADDLW  34
0055:  MOVWF  04
0056:  MOVF   00,W
0057:  ANDWF  4C,W
0058:  BTFSC  03.2
0059:  GOTO   09B
....................          y = 0; 
005A:  CLRF   4A
....................          for(t=i;t<AltOBJ+i;t++){ 
005B:  MOVF   2D,W
005C:  MOVWF  4B
005D:  MOVF   2D,W
005E:  ADDWF  2E,W
005F:  SUBWF  4B,W
0060:  BTFSC  03.0
0061:  GOTO   075
....................             vm[t] |= OBJ[y]; 
0062:  MOVLW  36
0063:  ADDWF  4B,W
0064:  MOVWF  4C
0065:  MOVWF  04
0066:  MOVF   00,W
0067:  MOVWF  4D
0068:  MOVLW  34
0069:  ADDWF  4A,W
006A:  MOVWF  04
006B:  MOVF   00,W
006C:  IORWF  4D,W
006D:  MOVWF  4D
006E:  MOVF   4C,W
006F:  MOVWF  04
0070:  MOVF   4D,W
0071:  MOVWF  00
....................             y++; 
0072:  INCF   4A,F
....................          } 
0073:  INCF   4B,F
0074:  GOTO   05D
....................          // ------------------ Se completou a completou uma linha 
....................          for(t=0;t<8;t++){ 
0075:  CLRF   4B
0076:  MOVF   4B,W
0077:  SUBLW  07
0078:  BTFSS  03.0
0079:  GOTO   099
....................             if(vm[t] == 0xff){ 
007A:  MOVLW  36
007B:  ADDWF  4B,W
007C:  MOVWF  04
007D:  INCFSZ 00,W
007E:  GOTO   097
....................                vm[t] = 0x00; 
007F:  MOVLW  36
0080:  ADDWF  4B,W
0081:  MOVWF  04
0082:  CLRF   00
....................                for(y=t;y>0;y--){ 
0083:  MOVF   4B,W
0084:  MOVWF  4A
0085:  MOVF   4A,F
0086:  BTFSC  03.2
0087:  GOTO   097
....................                   vm[y] = vm[y-1]; 
0088:  MOVLW  36
0089:  ADDWF  4A,W
008A:  MOVWF  4C
008B:  MOVLW  01
008C:  SUBWF  4A,W
008D:  ADDLW  36
008E:  MOVWF  04
008F:  MOVF   00,W
0090:  MOVWF  4D
0091:  MOVF   4C,W
0092:  MOVWF  04
0093:  MOVF   4D,W
0094:  MOVWF  00
....................                } 
0095:  DECF   4A,F
0096:  GOTO   085
....................             } 
....................          } 
0097:  INCF   4B,F
0098:  GOTO   076
....................          // -------------------------------------- 
....................          i = 0; 
0099:  CLRF   2D
....................       } 
....................       else i++; 
009A:  GOTO   09C
009B:  INCF   2D,F
....................       contaTempo = 0; 
009C:  CLRF   2C
....................    } 
.................... } 
009D:  BCF    0B.2
009E:  BCF    0A.3
009F:  GOTO   02D
.................... void main(){ 
*
00B5:  CLRF   04
00B6:  MOVLW  1F
00B7:  ANDWF  03,F
00B8:  CLRF   2C
00B9:  CLRF   2D
00BA:  MOVLW  02
00BB:  MOVWF  2E
00BC:  CLRF   2F
00BD:  MOVLW  03
00BE:  MOVWF  30
00BF:  CLRF   31
00C0:  MOVLW  02
00C1:  MOVWF  32
00C2:  BSF    03.5
00C3:  BSF    1F.0
00C4:  BSF    1F.1
00C5:  BSF    1F.2
....................    int x,y; 
....................    setup_timer_0 (RTCC_DIV_256); 
*
00DA:  BSF    03.5
00DB:  MOVF   01,W
00DC:  ANDLW  C0
00DD:  IORLW  07
00DE:  MOVWF  01
....................    set_timer0(0); 
00DF:  BCF    03.5
00E0:  CLRF   01
....................    enable_interrupts (INT_TIMER0);  
00E1:  BSF    0B.5
....................    enable_interrupts(GLOBAL);   
00E2:  MOVLW  C0
00E3:  IORWF  0B,F
....................    output_high(pin_a5); 
00E4:  BSF    03.5
00E5:  BCF    05.5
00E6:  BCF    03.5
00E7:  BSF    05.5
....................    output_low(pin_a5);    
00E8:  BSF    03.5
00E9:  BCF    05.5
00EA:  BCF    03.5
00EB:  BCF    05.5
....................    output_high(pin_a4); 
00EC:  BSF    03.5
00ED:  BCF    05.4
00EE:  BCF    03.5
00EF:  BSF    05.4
....................    while(true){ 
....................       y=0; 
00F0:  CLRF   47
....................       for (x = 0; x < 8; x++){ 
00F1:  CLRF   46
00F2:  MOVF   46,W
00F3:  SUBLW  07
00F4:  BTFSS  03.0
00F5:  GOTO   12A
....................          output_low(pin_a4); 
00F6:  BSF    03.5
00F7:  BCF    05.4
00F8:  BCF    03.5
00F9:  BCF    05.4
....................          output_high(pin_a4); 
00FA:  BSF    03.5
00FB:  BCF    05.4
00FC:  BCF    03.5
00FD:  BSF    05.4
....................          if((x>=i) && (x < AltOBJ+i)){ 
00FE:  MOVF   2D,W
00FF:  SUBWF  46,W
0100:  BTFSS  03.0
0101:  GOTO   11A
0102:  MOVF   2D,W
0103:  ADDWF  2E,W
0104:  SUBWF  46,W
0105:  BTFSC  03.0
0106:  GOTO   11A
....................             output_c(~(vm[x] | OBJ[y])); 
0107:  MOVLW  36
0108:  ADDWF  46,W
0109:  MOVWF  04
010A:  MOVF   00,W
010B:  MOVWF  48
010C:  MOVLW  34
010D:  ADDWF  47,W
010E:  MOVWF  04
010F:  MOVF   00,W
0110:  IORWF  48,W
0111:  XORLW  FF
0112:  MOVWF  48
0113:  BSF    03.5
0114:  CLRF   07
0115:  BCF    03.5
0116:  MOVF   48,W
0117:  MOVWF  07
....................             y++; 
0118:  INCF   47,F
....................          } 
....................          else 
0119:  GOTO   125
....................             output_c(~vm[x]); 
011A:  MOVLW  36
011B:  ADDWF  46,W
011C:  MOVWF  04
011D:  MOVF   00,W
011E:  XORLW  FF
011F:  MOVWF  48
0120:  BSF    03.5
0121:  CLRF   07
0122:  BCF    03.5
0123:  MOVF   48,W
0124:  MOVWF  07
....................          delay_ms(2); 
0125:  MOVLW  02
0126:  MOVWF  48
0127:  GOTO   0A0
....................         
....................       } 
0128:  INCF   46,F
0129:  GOTO   0F2
....................       output_high(pin_a5);  
012A:  BSF    03.5
012B:  BCF    05.5
012C:  BCF    03.5
012D:  BSF    05.5
....................       output_low(pin_a5);   
012E:  BSF    03.5
012F:  BCF    05.5
0130:  BCF    03.5
0131:  BCF    05.5
....................        
....................       contaBotoes++; 
0132:  INCF   2F,F
....................       if (contaBotoes > 2){ 
0133:  MOVF   2F,W
0134:  SUBLW  02
0135:  BTFSC  03.0
0136:  GOTO   1A4
....................          if(!input(pin_a3)){ // Direita 
0137:  BSF    03.5
0138:  BSF    05.3
0139:  BCF    03.5
013A:  BTFSC  05.3
013B:  GOTO   14F
....................             if(desloc < (8-AltOBJ)){ 
013C:  MOVF   2E,W
013D:  SUBLW  08
013E:  SUBWF  30,W
013F:  BTFSC  03.0
0140:  GOTO   14F
....................                desloc++; 
0141:  INCF   30,F
....................                for(x=0;x<AltOBJ;x++) 
0142:  CLRF   46
0143:  MOVF   2E,W
0144:  SUBWF  46,W
0145:  BTFSC  03.0
0146:  GOTO   14F
....................                   OBJ[x] >>= 1; 
0147:  MOVLW  34
0148:  ADDWF  46,W
0149:  MOVWF  04
014A:  BCF    03.0
014B:  RRF    00,W
014C:  MOVWF  00
014D:  INCF   46,F
014E:  GOTO   143
....................             } 
....................          } 
....................          if(!input(pin_a1)){ // esq 
014F:  BSF    03.5
0150:  BSF    05.1
0151:  BCF    03.5
0152:  BTFSC  05.1
0153:  GOTO   1A3
....................             if(desloc > 0){ 
0154:  MOVF   30,F
0155:  BTFSC  03.2
0156:  GOTO   1A3
....................                for(x=0;x<altOBJ;x++){ 
0157:  CLRF   46
0158:  MOVF   2E,W
0159:  SUBWF  46,W
015A:  BTFSC  03.0
015B:  GOTO   192
....................                   //if((bit_test(OBJ[x],desloc) & bit_test(vm[i+x],desloc-1)) == 0) 
....................                   bit1 = bit_test(OBJ[x],desloc); 
015C:  MOVLW  34
015D:  ADDWF  46,W
015E:  MOVWF  04
015F:  MOVF   00,W
0160:  MOVWF  48
0161:  MOVWF  20
0162:  MOVF   30,W
0163:  MOVWF  21
0164:  BTFSC  03.2
0165:  GOTO   16A
0166:  BCF    03.0
0167:  RRF    20,F
0168:  DECFSZ 21,F
0169:  GOTO   166
016A:  BCF    33.0
016B:  BTFSC  20.0
016C:  BSF    33.0
....................                   bit2 = bit_test(vm[i+x],desloc-1); 
016D:  MOVF   46,W
016E:  ADDWF  2D,W
016F:  ADDLW  36
0170:  MOVWF  04
0171:  MOVF   00,W
0172:  MOVWF  48
0173:  MOVLW  01
0174:  SUBWF  30,W
0175:  MOVWF  49
0176:  MOVF   48,W
0177:  MOVWF  20
0178:  MOVF   49,W
0179:  MOVWF  21
017A:  BTFSC  03.2
017B:  GOTO   180
017C:  BCF    03.0
017D:  RRF    20,F
017E:  DECFSZ 21,F
017F:  GOTO   17C
0180:  BCF    33.1
0181:  BTFSC  20.0
0182:  BSF    33.1
....................                   if((bit1 & bit2)!=1){ 
0183:  MOVLW  00
0184:  BTFSC  33.0
0185:  MOVLW  01
0186:  MOVWF  49
0187:  MOVLW  00
0188:  BTFSC  33.1
0189:  MOVLW  01
018A:  ANDWF  49,W
018B:  SUBLW  01
018C:  BTFSC  03.2
018D:  GOTO   190
....................                      flag = 1; 
018E:  MOVLW  01
018F:  MOVWF  31
....................                   } 
....................                } 
0190:  INCF   46,F
0191:  GOTO   158
....................                if(flag==1){ 
0192:  DECFSZ 31,W
0193:  GOTO   1A3
....................                   flag = 0; 
0194:  CLRF   31
....................                   desloc--; 
0195:  DECF   30,F
....................                   for(x=0;x<AltOBJ;x++) 
0196:  CLRF   46
0197:  MOVF   2E,W
0198:  SUBWF  46,W
0199:  BTFSC  03.0
019A:  GOTO   1A3
....................                      OBJ[x] <<= 1; 
019B:  MOVLW  34
019C:  ADDWF  46,W
019D:  MOVWF  04
019E:  BCF    03.0
019F:  RLF    00,W
01A0:  MOVWF  00
01A1:  INCF   46,F
01A2:  GOTO   197
....................                } 
....................             } 
....................          }        
....................          contaBotoes = 0; 
01A3:  CLRF   2F
....................       } 
....................       /*      a0 - baixo  a1 - esq  a2 - cima  a3 - dir      */ 
....................    } 
01A4:  GOTO   0F0
.................... } 
....................  
01A5:  SLEEP

Configuration Fuses:
   Word  1: 3FBA   HS NOWDT NOPUT NOPROTECT NOBROWNOUT
